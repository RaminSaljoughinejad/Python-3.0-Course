{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dont Run this Code! it is not a part of the course!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "original = open(\"Main 03.ipynb\", \"r\")\n",
    "current_line = 1\n",
    "data_to_add = \"\"\n",
    "for i in original:\n",
    "    if current_line == 38:\n",
    "        data_to_add = \",\"+i\n",
    "    elif current_line>37 and current_line<48:\n",
    "        data_to_add+=i\n",
    "    current_line+=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def data_add_changer(data, pre1, pre2, nex1, nex2):\n",
    "    data = data.replace(\"!\", pre1)\n",
    "    data = data.replace(\"@\", pre2)\n",
    "    data = data.replace(\"#\", nex1)\n",
    "    data = data.replace(\"&\", nex2)\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74']\n",
      "['026/Main 26.ipynb', '027/Main 27.ipynb', '028/Main 28.ipynb', '029/Main 29.ipynb', '030/Main 30.ipynb', '031/Main 31.ipynb', '032/Main 32.ipynb', '033/Main 33.ipynb', '034/Main 34.ipynb', '035/Main 35.ipynb', '036/Main 36.ipynb', '037/Main 37.ipynb', '038/Main 38.ipynb', '039/Main 39.ipynb', '040/Main 40.ipynb', '041/Main 41.ipynb', '042/Main 42.ipynb', '043/Main 43.ipynb', '044/Main 44.ipynb', '045/Main 45.ipynb', '046/Main 46.ipynb', '047/Main 47.ipynb', '048/Main 48.ipynb', '049/Main 49.ipynb', '050/Main 50.ipynb', '051/Main 51.ipynb', '052/Main 52.ipynb', '053/Main 53.ipynb', '054/Main 54.ipynb', '055/Main 55.ipynb', '056/Main 56.ipynb', '057/Main 57.ipynb', '058/Main 58.ipynb', '059/Main 59.ipynb', '060/Main 60.ipynb', '061/Main 61.ipynb', '062/Main 62.ipynb', '063/Main 63.ipynb', '064/Main 64.ipynb', '065/Main 65.ipynb', '066/Main 66.ipynb', '067/Main 67.ipynb', '068/Main 68.ipynb', '069/Main 69.ipynb', '070/Main 70.ipynb', '071/Main 71.ipynb', '072/Main 72.ipynb', '073/Main 73.ipynb', '074/Main 74.ipynb']\n"
     ]
    }
   ],
   "source": [
    "#mylist = [\"0\"+str(i) for i in range(2,10) ]\n",
    "#mylist += [str(i) for i in range(10,75)]\n",
    "mylist = [str(i) for i in range(26,75)]\n",
    "\n",
    "print(mylist)\n",
    "all_paths = []\n",
    "for i in mylist:\n",
    "    folder_content = os.listdir(\"0\"+i)\n",
    "    for j in folder_content:\n",
    "        if \".ipynb\" in j and \"ipynb_checkpoints\" not in j and \"Untitled.ipynb\" not in j:\n",
    "            all_paths.append(f\"0{i}/{j}\")\n",
    "mylist.append('75')\n",
    "mylist.insert(0,'25')\n",
    "print(all_paths)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "025\n",
      "026/Main 26.ipynb\n",
      "027\n",
      "#########\n",
      "026\n",
      "027/Main 27.ipynb\n",
      "028\n",
      "#########\n",
      "027\n",
      "028/Main 28.ipynb\n",
      "029\n",
      "#########\n",
      "028\n",
      "029/Main 29.ipynb\n",
      "030\n",
      "#########\n",
      "029\n",
      "030/Main 30.ipynb\n",
      "031\n",
      "#########\n",
      "030\n",
      "031/Main 31.ipynb\n",
      "032\n",
      "#########\n",
      "031\n",
      "032/Main 32.ipynb\n",
      "033\n",
      "#########\n",
      "032\n",
      "033/Main 33.ipynb\n",
      "034\n",
      "#########\n",
      "033\n",
      "034/Main 34.ipynb\n",
      "035\n",
      "#########\n",
      "034\n",
      "035/Main 35.ipynb\n",
      "036\n",
      "#########\n",
      "035\n",
      "036/Main 36.ipynb\n",
      "037\n",
      "#########\n",
      "036\n",
      "037/Main 37.ipynb\n",
      "038\n",
      "#########\n",
      "037\n",
      "038/Main 38.ipynb\n",
      "039\n",
      "#########\n",
      "038\n",
      "039/Main 39.ipynb\n",
      "040\n",
      "#########\n",
      "039\n",
      "040/Main 40.ipynb\n",
      "041\n",
      "#########\n",
      "040\n",
      "041/Main 41.ipynb\n",
      "042\n",
      "#########\n",
      "041\n",
      "042/Main 42.ipynb\n",
      "043\n",
      "#########\n",
      "042\n",
      "043/Main 43.ipynb\n",
      "044\n",
      "#########\n",
      "043\n",
      "044/Main 44.ipynb\n",
      "045\n",
      "#########\n",
      "044\n",
      "045/Main 45.ipynb\n",
      "046\n",
      "#########\n",
      "045\n",
      "046/Main 46.ipynb\n",
      "047\n",
      "#########\n",
      "046\n",
      "047/Main 47.ipynb\n",
      "048\n",
      "#########\n",
      "047\n",
      "048/Main 48.ipynb\n",
      "049\n",
      "#########\n",
      "048\n",
      "049/Main 49.ipynb\n",
      "050\n",
      "#########\n",
      "049\n",
      "050/Main 50.ipynb\n",
      "051\n",
      "#########\n",
      "050\n",
      "051/Main 51.ipynb\n",
      "052\n",
      "#########\n",
      "051\n",
      "052/Main 52.ipynb\n",
      "053\n",
      "#########\n",
      "052\n",
      "053/Main 53.ipynb\n",
      "054\n",
      "#########\n",
      "053\n",
      "054/Main 54.ipynb\n",
      "055\n",
      "#########\n",
      "054\n",
      "055/Main 55.ipynb\n",
      "056\n",
      "#########\n",
      "055\n",
      "056/Main 56.ipynb\n",
      "057\n",
      "#########\n",
      "056\n",
      "057/Main 57.ipynb\n",
      "058\n",
      "#########\n",
      "057\n",
      "058/Main 58.ipynb\n",
      "059\n",
      "#########\n",
      "058\n",
      "059/Main 59.ipynb\n",
      "060\n",
      "#########\n",
      "059\n",
      "060/Main 60.ipynb\n",
      "061\n",
      "#########\n",
      "060\n",
      "061/Main 61.ipynb\n",
      "062\n",
      "#########\n",
      "061\n",
      "062/Main 62.ipynb\n",
      "063\n",
      "#########\n",
      "062\n",
      "063/Main 63.ipynb\n",
      "064\n",
      "#########\n",
      "063\n",
      "064/Main 64.ipynb\n",
      "065\n",
      "#########\n",
      "064\n",
      "065/Main 65.ipynb\n",
      "066\n",
      "#########\n",
      "065\n",
      "066/Main 66.ipynb\n",
      "067\n",
      "#########\n",
      "066\n",
      "067/Main 67.ipynb\n",
      "068\n",
      "#########\n",
      "067\n",
      "068/Main 68.ipynb\n",
      "069\n",
      "#########\n",
      "068\n",
      "069/Main 69.ipynb\n",
      "070\n",
      "#########\n",
      "069\n",
      "070/Main 70.ipynb\n",
      "071\n",
      "#########\n",
      "070\n",
      "071/Main 71.ipynb\n",
      "072\n",
      "#########\n",
      "071\n",
      "072/Main 72.ipynb\n",
      "073\n",
      "#########\n",
      "072\n",
      "073/Main 73.ipynb\n",
      "074\n",
      "#########\n",
      "073\n",
      "074/Main 74.ipynb\n",
      "075\n",
      "#########\n"
     ]
    }
   ],
   "source": [
    "counter = 1\n",
    "for eachfile in all_paths:\n",
    "    file = open(eachfile, \"r\")\n",
    "    current_line = 1\n",
    "    last_metadata = 1\n",
    "    for i in file:\n",
    "        if '],' in i:\n",
    "            last_metadata = current_line\n",
    "        current_line+=1\n",
    "    #print(last_metadata)\n",
    "    \n",
    "    \n",
    "    \n",
    "    file = open(eachfile, \"r\")\n",
    "    current_line =1\n",
    "    out_File = \"\"\"\"\"\"\n",
    "    for i in file:\n",
    "        pre1 = \"0\"+str(mylist[counter-1])\n",
    "        pre2 = \"Main \"+str(mylist[counter-1])\n",
    "        nex1 = \"0\"+str(mylist[counter+1])\n",
    "        nex2 = \"Main \"+str(mylist[counter+1])\n",
    "        \n",
    "        if current_line != last_metadata:\n",
    "            out_File+=i\n",
    "        else:\n",
    "            out_File+=data_add_changer(data_to_add, pre1, pre2, nex1, nex2)\n",
    "            out_File+=i\n",
    "        current_line+=1\n",
    "    #print(out_File)\n",
    "    \n",
    "    print(pre1)\n",
    "    print(eachfile)\n",
    "    print(nex1)\n",
    "    print(\"#########\")\n",
    "    newFile = open(eachfile , \"w+\")\n",
    "    newFile.write(out_File)\n",
    "    newFile.close()\n",
    "    counter+=1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# the above error means it worked!"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
